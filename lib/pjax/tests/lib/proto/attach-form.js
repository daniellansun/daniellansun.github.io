var tape=require("tape");var on=require("../../../lib/events/on");var trigger=require("../../../lib/events/trigger");var attachForm=require("../../../lib/proto/attach-form");var attr="data-pjax-state";tape("test attach form prototype method",(function(t){var e=document.createElement("form");var a=false;attachForm.call({options:{currentUrlFullReload:true},loadUrl:function(){a=true}},e);var o=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search;e.action="http://external.com/";trigger(e,"submit");t.equal(e.getAttribute(attr),"external","external url stop behavior");e.action=o+"#anchor";trigger(e,"submit");t.equal(e.getAttribute(attr),"anchor","internal anchor stop behavior");window.location.hash="#anchor";e.action=o+"#another-anchor";trigger(e,"submit");t.equal(e.getAttribute(attr),"anchor","different anchors stop behavior");window.location.hash="";e.action=o+"#";trigger(e,"submit");t.equal(e.getAttribute(attr),"anchor-empty","empty anchor stop behavior");e.action=window.location.href;trigger(e,"submit");t.equal(e.getAttribute(attr),"reload","submitting when currentUrlFullReload is true will submit normally, without XHR");t.equal(a,false,"loadUrl() not called");e.action=window.location.protocol+"//"+window.location.host+"/internal";e.method="POST";trigger(e,"submit");t.equal(e.getAttribute(attr),"submit","triggering a POST request to the next page");t.equal(a,true,"loadUrl() called correctly");a=false;e.setAttribute(attr,"");e.action=window.location.protocol+"//"+window.location.host+"/internal";e.method="GET";trigger(e,"submit");t.equal(e.getAttribute(attr),"submit","triggering a GET request to the next page");t.equal(a,true,"loadUrl() called correctly");t.end()}));tape("test attach form preventDefaulted events",(function(t){var e=false;var a=document.createElement("form");on(a,"submit",(function(t){t.preventDefault()}));attachForm.call({options:{},loadUrl:function(){e=true}},a);a.action="#";trigger(a,"submit");t.equal(e,false,"events that are preventDefaulted should not fire callback");t.end()}));tape("test options are not modified by attachForm",(function(t){var e=document.createElement("form");var a={foo:"bar"};var o=function(){};attachForm.call({options:a,loadUrl:o},e);e.action=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search;e.method="GET";trigger(e,"submit");t.equal(1,Object.keys(a).length,"options object that is passed in should not be modified");t.equal("bar",a.foo,"options object that is passed in should not be modified");t.end()}));tape("test form elements parsed correctly",(function(t){t.plan(1);var e=document.createElement("form");var a=document.createElement("input");a.name="input";a.value="value";e.appendChild(a);var o=[{name:"input",value:"value"}];var r={options:{},loadUrl:function(e,a){t.same(a.requestOptions.requestParams,o,"form elements parsed correctly")}};attachForm.call(r,e);e.action=window.location.protocol+"//"+window.location.host+"/internal";trigger(e,"submit");t.end()}));tape('test form.enctype="multipart/form-data"',(function(t){t.plan(4);var e=document.createElement("form");e.enctype="multipart/form-data";var a=document.createElement("input");a.name="input";a.value="value";e.appendChild(a);var o={options:{},loadUrl:function(e,a){t.equals(a.requestOptions.requestParams,undefined,"form elements not parsed manually");t.true(a.requestOptions.formData instanceof FormData,"requestOptions.formData is a FormData");t.equals(Array.from(a.requestOptions.formData.entries()).length,1,"correct number of FormData elements");t.equals(a.requestOptions.formData.get("input"),"value","FormData element value set correctly")}};attachForm.call(o,e);e.action=window.location.protocol+"//"+window.location.host+"/internal";trigger(e,"submit");t.end()}));